name: Unity Build and PlayMode Tests (Docker Custom)

on:
  push:
    branches:
      - sprint-4
  pull_request:

jobs:
  build-project:
    name: Build Project (Compile Check)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Write Unity license file
        run: |
          mkdir -p unity-lic
          echo "${UNITY_LICENSE_FILE}" > unity-lic/Unity_lic.ulf
        env:
          UNITY_LICENSE_FILE: ${{ secrets.UNITY_LICENSE_FILE }}

      - name: Build using Docker (Unity 6000.0.41f1)
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/project \
            -v ${{ github.workspace }}/unity-lic:/root/.local/share/unity3d/Unity \
            unityci/editor:ubuntu-6000.0.41f1-linux-il2cpp-3.1.0 \
            /opt/unity/Editor/Unity \
              -batchmode -nographics -logFile -quit \
              -projectPath /project \
              -buildTarget StandaloneLinux64

  playmode-tests:
    name: Run Unity PlayMode Tests (Docker)
    needs: build-project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Write Unity license file
        run: |
          mkdir -p unity-lic
          echo "${UNITY_LICENSE_FILE}" > unity-lic/Unity_lic.ulf
        env:
          UNITY_LICENSE_FILE: ${{ secrets.UNITY_LICENSE_FILE }}

      - name: Run PlayMode tests using Docker (Unity 6000.0.41f1)
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/project \
            -v ${{ github.workspace }}/unity-lic:/root/.local/share/unity3d/Unity \
            unityci/editor:ubuntu-6000.0.41f1-linux-il2cpp-3.1.0 \
            /opt/unity/Editor/Unity \
              -batchmode -nographics -logFile /project/Tests.log -quit \
              -projectPath /project \
              -runTests -testPlatform PlayMode \
              -artifactsPath /project/TestResults \
              -disable-rendering

      - name: Upload test log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: UnityPlaymodeLog
          path: Tests.log

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: PlayModeTestResults
          path: TestResults
